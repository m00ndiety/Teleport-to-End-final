--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,t,t,t)local t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch=105,28,27,49,29,52,80,49,75,35,71,35,24,45,97,93,94,36,62,98,98,40,71,11,51,84,48,95,10,64,58,94,85,70,81,21,76,29,50,94,67,99,29,29,34,37,94,70,21,63,75,98 while t~=72 do if u>=784 then if u>=1121 then if u>=1264 then if u>=1338 then if u<=1338 then bk=function(t,ci,cj,ck)local ck,cl,cm,cn,co cm=t[91]co=bq ck=t[18]cn=t[38]cl=t[154]return function(...)local t,co,cp,cq,cr,cs,ct,cu,cv co=1 cs=-1 t=-1 cv={}cu={...}cr=(bz('#',...)-1)cq={}cp={}for t=0,cr do do if(not(t<cl))then cv[(t-cl)]=cu[(t+1)];else do cp[t]=cu[(t+1)];end end;end end;ct=(cr-cl+1)while true do local t,cl,cr,ct,cu,cv,cw,cx,cy,cz t=ck[co]cy=t[136]cz=t[165]cr=t[151]cv=t[180]cx=t[163]ct=t[102]cl=t[169]cu=t[67]cw=t[156]do if not(cy>26)then do if not(cy>12)then if not(cy>5)then do if not(t[136]<3)then if not(cy>3)then if((cp[cr]<cm[cx]))then co=cu;end;else do if(t[136]<5)then while cp[cr]do co=cu;break end else cp[cr]=cp[cu];end end end else if not(cy<1)then do if 1==cy then cp[cr][cm[cu]]=cm[cx];else local ck ck=cr cp[ck]=cp[ck](cp[ck+1]);end end else while not cp[cr]do co=t[67];break end end end end else if not(cy>8)then if not(cy<7)then if 7==cy then cp[cr]=(cm[cu]+cp[cx]);else cp[t[151]]=nil;end else local ck,cl,ct,cw cw=cr cl=((cx-1)*50)ct=cp[cw]ck=(cs-cw)for cz=1,ck do do ct[(cl+cz)]=cp[(cw+cz)]end end;end else do if not(cy<11)then if(cy>11)then do cp[t[151]]=ci[cu];end else local ck,cl,ct,cw cw=cr cl,ck=ce(cp[cw](cp[(cw+1)]))cs=(ck+cw-1)ct=0 do for ck=cw,cs do ct=(ct+1);cp[ck]=cl[ct];end;end end else do if 9==cy then cp[cr]=(cp[cu]%cm[cx]);elseif(not(cp[cr]==cm[cx]))then co=t[67];end end end end end end else do if not(cy<20)then if not(cy>22)then if not(t[136]<b)then if(cy<22)then cp[cr]=(cp[cu]+cm[cx]);else local b,ck,cl,ct b=cr do ck,ct=ce(cp[b](w(cp,(b+1),cs)))end cs=(ct+b-1)cl=0 for ct=b,cs do cl=(cl+1);cp[ct]=ck[cl];end;end else local b b=cr cp[b]=cp[b](w(cp,b+1,cu));end else if not(cy>24)then if not(cy~=23)then local b,ck,cl cl=cr do b=cp[cl]end ck=(cs-cl)for ct=1,ck do b[ct]=cp[(cl+ct)]end;else if((cp[cr]<cp[cx]))then co=t[67];end;end else do if(cy<26)then local b b=cr cp[b](cp[(b+j)])else cp[cr]=(cp[t[67]]-cp[t[163]]);end end end end else do if not(t[136]<16)then if not(cy<18)then if(cy<19)then if(cp[cx]==cp[cr])then do co=t[67];end end;else cm=bq[cr](cm)end else if(cy<17)then do return cp[cr]end else local b,j,ck do ck=cr end j={cp[ck](w(cp,ck+1,cs))}b=0 for cl=ck,t[163]do do b=(b+1);end do cp[cl]=j[b];end end end end else if not(t[136]>13)then cp[cr]=cp[cu][cm[cx]];else if 14==cy then cp[cr]=(cp[cu]/cm[cx]);else do cp[cr]();end end end end end end end end end else if not(cy<41)then if not(cy<48)then if not(t[136]<51)then do if not(cy<53)then if(cy<54)then local b,j,ck j=t[151]do b=cp[(j+2)]end ck=(cp[j]+b)cp[j]=ck;if((b>0))then if(not(ck>cp[j+1]))then do co=cu;end do cp[(j+3)]=ck;end end elseif(not(ck<cp[j+1]))then co=cu;cp[(j+3)]=ck;end else local b b={}while#cq>0 do for j=1,#cq do local j=cq[j]for ck=0,#j do local j=j[ck]local ck=j[1]local cl=j[2]if ck==cp and cl>=0 then b[cl]=ck[cl]j[1]=b end end end break end return t[cv],cy;end else if(cy>51)then cp[cr]=#cp[t[67]];else if(not(cp[t[151]]==cp[cx]))then do co=cu;end end;end end end else if not(cy>48)then ci[cu]=cp[cr];else if(cy<50)then cp[cr]=cm[cu]else co=t[67];end end end else if not(cy>43)then if not(cy>41)then cp[cr]={};else if(cy<43)then cp[cr]=(cp[cu]*cm[cx]);else local b b=cr cp[b](w(cp,(b+1),cu))end end else do if not(t[136]>45)then if(cy<45)then cp[cr]=cj[cm[cu]];else local b b=cr cp[b]=cp[b](w(cp,b+1,cs));end else do if 46==cy then cp[t[151]]=(not(cu==0));else local b,j,ck j=cn[cu]ck=nil b={}ck=bs({},{__index=function(cl,cl)local cl=b[cl];return cl[n][cl[c]];end,__newindex=function(c,c,n)local c=b[c]c[1][c[2]]=n;end;});do for c=1,t[163]do local n n=t[52][c]if n[1]then b[(c-1)]={cp,n[2],nil,nil,nil};else do b[(c-1)]={ci,n[2],nil,nil,nil};end end;do cq[(#cq+1)]=b;end end;end cp[cr]=bk(j,ck,cj);end end end end end end else do if not(cy<34)then if not(t[136]<37)then if not(cy<39)then if(cy<40)then local b,c,j,n,ci do c=cr end ci=cx b=(c+2)n={cp[c](cp[c+1],cp[b])}for ck=1,ci do do cp[(b+ck)]=n[ck]end end j=cp[(c+3)]if j then cp[b]=j else co=cu;end;else cp[cr]=(cp[cu]-cm[cx]);end else if(cy<38)then cp[cr]=cp[cu][cp[cx]];else do cp[cr]=(not cp[cu]);end end end else if not(cy>34)then local b,c,j,n j=cr n,c=ce(cp[j](w(cp,(j+1),cu)))do cs=(c+j-1)end b=0 for c=j,cs do do b=(b+1);end do cp[c]=n[b];end end;else if(t[136]>35)then cp[cr]=bk(cn[t[67]],nil,cj);else local b,c,j c=cr j=cp[c]b=cp[(c+2)]if((b>0))then if((j>cp[c+1]))then co=cu;else cp[(c+3)]=j;end elseif((j<cp[c+1]))then co=cu;else cp[(c+3)]=j;end end end end else if not(cy<30)then if not(cy>31)then do if(cy<31)then cp[cr]=(cp[cu]+cp[cx]);else while(cm[cr]<cp[cx])do co=cu;break end end end else if(cy>32)then for b=cr,cu do cp[b]=nil;end;else cp[cr][cp[cu]]=cp[cx];end end else if not(cy>27)then local b,c b=t[151]do c=cp[cu]end cp[(b+1)]=c;cp[b]=c[cm[cx]];else if(cy<29)then local b,c b=cu c=cp[b]for j=(b+1),cx do c=(c..cp[j]);end;cp[cr]=c;else cp[cr][cm[cu]]=cp[cx];end end end end end end end end co=(co+1);end;end;end u=1365 else if u>1372 then break else u=1409 return bk(bh(br()),{},br())();end end else if u<=1264 then u=1280 bh=function(b,c,c,c)local c,j,n,t,ci,cj,ck,cl=79,66,29,74,72,79,47,23,85,36,45,85,69,18,51,63,34,85,62,99,61,99,94,99 while c~=47 do if j<=265 then if j>=195 then if j<=226 then if j<218 then t=bd()j=226 else for cm=(#y+1),(#y+t)do local cn,co,cp,cq,cr=88,38,40,56,65,62,88,59,12,59,91,84,66,71,29,78,98,51,53,40,73,81 while cn~=54 do if co<=205 then if co<=109 then if co>=68 then if co<105 then co=109 cr[165]=be();else do cq=bd()end co=128 end else if co>40 then cr={}co=68 else co=53 cp,cq,cr=nil end end else if co<=143 then if co>133 then cr[e]=be();co=187 else cp=bd()co=143 end else if co<200 then cr[i]=bv(cq,1,2);co=205 else co=222 cr[136]=bv(cp,1,11);end end end else if co>=348 then if co<=388 then if co>351 then cr[156]=-cr[163]co=437 else do cr[169]=-cr[151]end co=388 end else if co<470 then co=476 do y[cm]=cr;end else cn=54;end end else if co<=259 then if co>228 then co=289 do cr[180]=bv(cq,12,20);end else cr[151]=bv(cq,3,11);co=259 end else if co>291 then co=348 do cr[67]=bv(cp,12,33);end else do cr[163]=bv(cq,21,29);end co=317 end end end end end end j=243 end else if j>245 then j=282 do n={}end else do cj=bd()end j=265 end end else if j<=108 then if j<100 then j=108 n,t,ci,cj,ck,cl=nil else ck={}j=157 end else if j>159 then j=195 do cl={}end else do ci={}end j=180 end end end else if j>=406 then if j>=474 then if j<=474 then cl[18]=ck;j=511 else if j>519 then c=47;else j=529 return cl;end end else if j<445 then cl[154]=be();j=453 else for c=1,bd()do local e,i,t,cm,cn,co=77,52,29,22,90,25,15,18,49,89,96,60,19,41,22,67,27,80,74,53,50,12,25,86,58,68,42 while e~=46 do if i>=343 then if i>=497 then if i>=549 then if i>=566 then if i>571 then break else i=595 ck[c]=t;end else do t[156]=-t[163]end i=566 end else if i<517 then i=526 t[h]=bv(co,12,20);else i=549 t[169]=-t[151]end end else if i>=423 then if i<459 then i=463 do t[67]=bv(cn,12,33);end else do t[163]=bv(co,21,29);end i=497 end else if i>350 then i=423 t[151]=bv(co,3,11);else i=389 t[136]=bv(cn,1,11);end end end else if i>=210 then if i>=273 then if i>=294 then if i>301 then i=343 t[186]=cm else do cm=bv(co,1,2)end i=318 end else i=294 cn=bd()end else if i<241 then i=243 if 1==be()then for c=1,be()do do t[52][c]={be()==0,bd()}end end end else co=bd()i=273 end end else if i<=87 then if i>54 then i=117 t={{},nil,nil}else i=87 t,cm,cn,co=nil end else if i>125 then i=210 t[k]={};else t[165]=be();i=164 end end end end end end j=474 end end else if j<=325 then if j<318 then j=325 for c=1,cj do local e,h,i,k=72,57,86,47,61,93,77,90,59,17,26,68,57 while e~=28 do if h<=100 then if h<=57 then h=73 i,k=nil else if h>77 then h=147 i=nil else h=100 k=be()end end else if h<=147 then if(0==k)then do i=(not(be()==0));end elseif(2==k)then i=bb();elseif(not(k~=4))then do i=bg();end elseif(3==k)then i=b[bg()];end;h=171 else if h<185 then h=194 n[c]=i;else e=28;end end end end end else cl[91]=n j=341 end else if j<358 then for b=1,bd()do ci[b-1]=bh();end j=363 else j=406 cl[38]=ci;end end end end end end else if u>1282 then u=1338 bp={}else do bq={}end u=1322 end end end else if u<=1155 then if u>1127 then do bb=function()local b,c,e,h,i,j,k,n=71,48,19,26,19,16,27,99,45,41,86,49,46,13,43,10,23,17 while b~=31 do if c<=174 then if c<=89 then if c>52 then e=bd()c=119 else e,h,i,j,k,n=nil c=89 end else if c>=151 then if c<167 then do if((e==0 and k==0))then return 0 end end c=174 else j=((-1)^by(31,k,1))c=220 end else k=bd()c=151 end end else if c>=322 then if c<=322 then do if 0==n then do if not(i==0)then n=1 do h=0 end else return(j*0)end end elseif not(n==a)then else do if not(i~=0)then do return(j*(0/0))end else return(j*(1/0))end end end end c=345 else if c>350 then break else c=378 return(j*(2^(n-1023))*(i/bc+h))end end else if c>=260 then if c<294 then i=(by(0,k,20)*4294967296+e)c=296 else h=1 c=322 end else c=260 n=by(20,k,11)end end end end end end u=1177 else u=1155 bo=function()local a,b a,b=bn(bf,bi,(bi+2))bi=(bi+2);do return((b*256)+a);end end end else if u>=1199 then if u<1218 then u=1224 ce=function(...)return{...},bz('#',...)end else y={}u=1264 end else bg=function(a,a,a,a)local a,b,c,e=48,48,99,38,36,94,13,44,37,42,53,22,47,35,73 while a~=28 do if b<=120 then if b<=48 then b=95 c,e=nil else if b<113 then do e=bd()end b=120 else c=bf:sub(bi,(bi+e-1))b=135 end end else if b>=154 then if b<174 then b=176 return c;else break end else bi=(bi+e);b=154 end end end end u=1199 end end end else if u<=892 then if u>=835 then if u>=870 then if u>879 then for a=1,31 do cg[a]=bl bl=(bl*2)end u=936 else bl=2 u=892 end else u=870 cg={[0]=1}end else if u<815 then u=817 ch=''else u=835 do bc=(2^52)end end end else if u>=1038 then if u>=1085 then if u<1096 then bd=function()local a,b,c,e do c,b,a,e=bn(bf,bi,(bi+3))end bi=(bi+4);return((e*16777216)+(a*65536)+(b*256)+c);end u=1100 else be=function()local a a=bn(bf,bi,bi)bi=(bi+1);return a;end u=1121 end else u=1085 do bi=1 end end else if u<=936 then u=954 by=function(a,b,c,e)local e,h,i=74,67,91,70,42,30,55,42,10,87,14,80 while e~=33 do if h>=170 then if h<=170 then h=197 i=(i-i%1)else if h>199 then e=33;else h=214 do return i end end end else if h>=91 then if h>97 then h=170 i=((b/cg[a])%cg[c])else do i=nil end h=128 end else h=91 i=nil end end end end else if u>962 then bv=function(a,b,c,e,e)local e do e=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(e-e%1);end u=1038 else cc=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,e=0,1 while a>0 and b>0 do local h,i=a%16,b%16 c=c+bm[h+1][i+1]*e a=(a-h)/16 b=(b-i)/16 e=e*16 end c=c+a*e+b*e return c end)u=1003 end end end end end else if u>=410 then if u<=523 then if u>=480 then if u<=480 then u=503 bx=(function(a,b,b)if not(bj(a)~='number')then return true else return r end end)else if u>512 then do bw=math.floor end u=560 else cb=math.abs u=523 end end else if u<430 then do bz=select end u=439 else u=480 bj=type end end else if u<=612 then if u>=585 then if u<607 then u=612 z=tonumber else v={}u=658 end else u=585 do w=(unpack or table.unpack)end end else if u>=695 then if u<733 then do bf=btfunction(a,b,b)return v[z(a,16)]end)end u=741 else bm={{0,1,2,3,4,5,g,7,8,9,10,11,12,m,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,f,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,s,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,o,1,6,7,4,5,},{11,10,9,8,15,14,13,l,3,2,1,0,7,6,5,4,},{12,13,14,p,8,9,10,d,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,q,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}u=784 end else u=695 for a=0,255 do v[a]=cd(a);end end end end else if u<=163 then if u<=70 then if u>31 then bn=string.byte u=95 else u=70 v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch=nil end else if u>=126 then if u>130 then u=187 bt=string.gsub else u=163 bu=string.sub end else u=126 cd=string.char end end else if u>=302 then if u<=302 then u=337 ba=math.ldexp else if u>341 then u=410 bs=setmetatable else u=363 br=(getfenv or function()return _ENV end)end end else if u<=187 then u=231 cf=string.rep else if u<269 then x=table.concat u=273 else do ca=table.insert end u=302 end end end end end end end end)(2047,21,2,11,102,11,6,102,186,1,52,12,13,1,0,15,5,false,2)